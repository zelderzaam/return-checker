{"version":3,"file":"index.mjs","sources":["../../../../../../adapters/node/index.ts"],"sourcesContent":["import crypto from 'crypto';\n\nimport fetch from 'node-fetch';\n\nimport {\n  setAbstractFetchFunc,\n  setAbstractConvertRequestFunc,\n  setAbstractConvertIncomingResponseFunc,\n  setAbstractConvertResponseFunc,\n  setAbstractConvertHeadersFunc,\n  setAbstractRuntimeString,\n  setCrypto,\n  AbstractFetchFunc,\n} from '../../runtime';\n\nimport {\n  nodeConvertRequest,\n  nodeConvertIncomingResponse,\n  nodeConvertAndSendResponse,\n  nodeConvertAndSetHeaders,\n  nodeRuntimeString,\n} from './adapter';\n\n// For the purposes of this package, fetch correctly implements everything we need\nsetAbstractFetchFunc(fetch as any as AbstractFetchFunc);\nsetAbstractConvertRequestFunc(nodeConvertRequest);\nsetAbstractConvertIncomingResponseFunc(nodeConvertIncomingResponse);\nsetAbstractConvertResponseFunc(nodeConvertAndSendResponse);\nsetAbstractConvertHeadersFunc(nodeConvertAndSetHeaders);\nsetAbstractRuntimeString(nodeRuntimeString);\nsetCrypto(crypto as any);\n"],"names":[],"mappings":";;;;;;;;AAuBA;AACA,oBAAoB,CAAC,KAAiC,CAAC;AACvD,6BAA6B,CAAC,kBAAkB,CAAC;AACjD,sCAAsC,CAAC,2BAA2B,CAAC;AACnE,8BAA8B,CAAC,0BAA0B,CAAC;AAC1D,6BAA6B,CAAC,wBAAwB,CAAC;AACvD,wBAAwB,CAAC,iBAAiB,CAAC;AAC3C,SAAS,CAAC,MAAa,CAAC"}