{"version":3,"file":"comment.mjs","sources":["../../../../../../../rest/admin/2024-04/comment.ts"],"sourcesContent":["/***********************************************************************************************************************\n* This file is auto-generated. If you have an issue, please create a GitHub issue.                                     *\n***********************************************************************************************************************/\n\nimport {Base, FindAllResponse} from '../../base';\nimport {ResourcePath, ResourceNames} from '../../types';\nimport {Session} from '../../../lib/session/session';\nimport {ApiVersion} from '../../../lib/types';\n\ninterface FindArgs {\n  session: Session;\n  id: number | string;\n  fields?: unknown;\n}\ninterface AllArgs {\n  [key: string]: unknown;\n  session: Session;\n  limit?: unknown;\n  since_id?: unknown;\n  created_at_min?: unknown;\n  created_at_max?: unknown;\n  updated_at_min?: unknown;\n  updated_at_max?: unknown;\n  published_at_min?: unknown;\n  published_at_max?: unknown;\n  fields?: unknown;\n  published_status?: unknown;\n  status?: unknown;\n}\ninterface CountArgs {\n  [key: string]: unknown;\n  session: Session;\n  created_at_min?: unknown;\n  created_at_max?: unknown;\n  updated_at_min?: unknown;\n  updated_at_max?: unknown;\n  published_at_min?: unknown;\n  published_at_max?: unknown;\n  published_status?: unknown;\n  status?: unknown;\n}\ninterface ApproveArgs {\n  [key: string]: unknown;\n  body?: {[key: string]: unknown} | null;\n}\ninterface NotSpamArgs {\n  [key: string]: unknown;\n  body?: {[key: string]: unknown} | null;\n}\ninterface RemoveArgs {\n  [key: string]: unknown;\n  body?: {[key: string]: unknown} | null;\n}\ninterface RestoreArgs {\n  [key: string]: unknown;\n  body?: {[key: string]: unknown} | null;\n}\ninterface SpamArgs {\n  [key: string]: unknown;\n  body?: {[key: string]: unknown} | null;\n}\n\nexport class Comment extends Base {\n  public static apiVersion = ApiVersion.April24;\n\n  protected static hasOne: {[key: string]: typeof Base} = {};\n  protected static hasMany: {[key: string]: typeof Base} = {};\n  protected static paths: ResourcePath[] = [\n    {\"http_method\": \"get\", \"operation\": \"count\", \"ids\": [], \"path\": \"comments/count.json\"},\n    {\"http_method\": \"get\", \"operation\": \"get\", \"ids\": [], \"path\": \"comments.json\"},\n    {\"http_method\": \"get\", \"operation\": \"get\", \"ids\": [\"id\"], \"path\": \"comments/<id>.json\"},\n    {\"http_method\": \"post\", \"operation\": \"approve\", \"ids\": [\"id\"], \"path\": \"comments/<id>/approve.json\"},\n    {\"http_method\": \"post\", \"operation\": \"not_spam\", \"ids\": [\"id\"], \"path\": \"comments/<id>/not_spam.json\"},\n    {\"http_method\": \"post\", \"operation\": \"post\", \"ids\": [], \"path\": \"comments.json\"},\n    {\"http_method\": \"post\", \"operation\": \"remove\", \"ids\": [\"id\"], \"path\": \"comments/<id>/remove.json\"},\n    {\"http_method\": \"post\", \"operation\": \"restore\", \"ids\": [\"id\"], \"path\": \"comments/<id>/restore.json\"},\n    {\"http_method\": \"post\", \"operation\": \"spam\", \"ids\": [\"id\"], \"path\": \"comments/<id>/spam.json\"},\n    {\"http_method\": \"put\", \"operation\": \"put\", \"ids\": [\"id\"], \"path\": \"comments/<id>.json\"}\n  ];\n  protected static resourceNames: ResourceNames[] = [\n    {\n      \"singular\": \"comment\",\n      \"plural\": \"comments\"\n    }\n  ];\n\n  public static async find(\n    {\n      session,\n      id,\n      fields = null\n    }: FindArgs\n  ): Promise<Comment | null> {\n    const result = await this.baseFind<Comment>({\n      session: session,\n      requireIds: true,\n      urlIds: {\"id\": id},\n      params: {\"fields\": fields},\n    });\n    return result.data ? result.data[0] : null;\n  }\n\n  public static async all(\n    {\n      session,\n      limit = null,\n      since_id = null,\n      created_at_min = null,\n      created_at_max = null,\n      updated_at_min = null,\n      updated_at_max = null,\n      published_at_min = null,\n      published_at_max = null,\n      fields = null,\n      published_status = null,\n      status = null,\n      ...otherArgs\n    }: AllArgs\n  ): Promise<FindAllResponse<Comment>> {\n    const response = await this.baseFind<Comment>({\n      session: session,\n      urlIds: {},\n      params: {\"limit\": limit, \"since_id\": since_id, \"created_at_min\": created_at_min, \"created_at_max\": created_at_max, \"updated_at_min\": updated_at_min, \"updated_at_max\": updated_at_max, \"published_at_min\": published_at_min, \"published_at_max\": published_at_max, \"fields\": fields, \"published_status\": published_status, \"status\": status, ...otherArgs},\n    });\n\n    return response;\n  }\n\n  public static async count(\n    {\n      session,\n      created_at_min = null,\n      created_at_max = null,\n      updated_at_min = null,\n      updated_at_max = null,\n      published_at_min = null,\n      published_at_max = null,\n      published_status = null,\n      status = null,\n      ...otherArgs\n    }: CountArgs\n  ): Promise<unknown> {\n    const response = await this.request<Comment>({\n      http_method: \"get\",\n      operation: \"count\",\n      session: session,\n      urlIds: {},\n      params: {\"created_at_min\": created_at_min, \"created_at_max\": created_at_max, \"updated_at_min\": updated_at_min, \"updated_at_max\": updated_at_max, \"published_at_min\": published_at_min, \"published_at_max\": published_at_max, \"published_status\": published_status, \"status\": status, ...otherArgs},\n      body: {},\n      entity: null,\n    });\n\n    return response ? response.body : null;\n  }\n\n  public async approve(\n    {\n      body = null,\n      ...otherArgs\n    }: ApproveArgs\n  ): Promise<unknown> {\n    const response = await this.request<Comment>({\n      http_method: \"post\",\n      operation: \"approve\",\n      session: this.session,\n      urlIds: {\"id\": this.id},\n      params: {...otherArgs},\n      body: body,\n      entity: this,\n    });\n\n    return response ? response.body : null;\n  }\n\n  public async not_spam(\n    {\n      body = null,\n      ...otherArgs\n    }: NotSpamArgs\n  ): Promise<unknown> {\n    const response = await this.request<Comment>({\n      http_method: \"post\",\n      operation: \"not_spam\",\n      session: this.session,\n      urlIds: {\"id\": this.id},\n      params: {...otherArgs},\n      body: body,\n      entity: this,\n    });\n\n    return response ? response.body : null;\n  }\n\n  public async remove(\n    {\n      body = null,\n      ...otherArgs\n    }: RemoveArgs\n  ): Promise<unknown> {\n    const response = await this.request<Comment>({\n      http_method: \"post\",\n      operation: \"remove\",\n      session: this.session,\n      urlIds: {\"id\": this.id},\n      params: {...otherArgs},\n      body: body,\n      entity: this,\n    });\n\n    return response ? response.body : null;\n  }\n\n  public async restore(\n    {\n      body = null,\n      ...otherArgs\n    }: RestoreArgs\n  ): Promise<unknown> {\n    const response = await this.request<Comment>({\n      http_method: \"post\",\n      operation: \"restore\",\n      session: this.session,\n      urlIds: {\"id\": this.id},\n      params: {...otherArgs},\n      body: body,\n      entity: this,\n    });\n\n    return response ? response.body : null;\n  }\n\n  public async spam(\n    {\n      body = null,\n      ...otherArgs\n    }: SpamArgs\n  ): Promise<unknown> {\n    const response = await this.request<Comment>({\n      http_method: \"post\",\n      operation: \"spam\",\n      session: this.session,\n      urlIds: {\"id\": this.id},\n      params: {...otherArgs},\n      body: body,\n      entity: this,\n    });\n\n    return response ? response.body : null;\n  }\n\n  public article_id: number | null;\n  public author: string | null;\n  public blog_id: number | null;\n  public body: string | null;\n  public body_html: string | null;\n  public created_at: string | null;\n  public email: string | null;\n  public id: number | null;\n  public ip: string | null;\n  public published_at: string | null;\n  public status: string | null;\n  public updated_at: string | null;\n  public user_agent: string | null;\n}\n"],"names":[],"mappings":"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"}