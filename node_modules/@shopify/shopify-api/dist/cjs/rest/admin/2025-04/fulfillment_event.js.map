{"version":3,"file":"fulfillment_event.js","sources":["../../../../../../../rest/admin/2025-04/fulfillment_event.ts"],"sourcesContent":["/***********************************************************************************************************************\n* This file is auto-generated. If you have an issue, please create a GitHub issue.                                     *\n***********************************************************************************************************************/\n\nimport {Base, FindAllResponse} from '../../base';\nimport {ResourcePath, ResourceNames} from '../../types';\nimport {Session} from '../../../lib/session/session';\nimport {ApiVersion} from '../../../lib/types';\n\nimport {Country} from './country';\nimport {Province} from './province';\n\ninterface FindArgs {\n  session: Session;\n  id: number | string;\n  order_id?: number | string | null;\n  fulfillment_id?: number | string | null;\n  event_id?: unknown;\n}\ninterface DeleteArgs {\n  session: Session;\n  id: number | string;\n  order_id?: number | string | null;\n  fulfillment_id?: number | string | null;\n}\ninterface AllArgs {\n  [key: string]: unknown;\n  session: Session;\n  order_id?: number | string | null;\n  fulfillment_id?: number | string | null;\n}\n\nexport class FulfillmentEvent extends Base {\n  public static apiVersion = ApiVersion.April25;\n\n  protected static hasOne: {[key: string]: typeof Base} = {\n    \"country\": Country,\n    \"province\": Province\n  };\n  protected static hasMany: {[key: string]: typeof Base} = {};\n  protected static paths: ResourcePath[] = [\n    {\"http_method\": \"delete\", \"operation\": \"delete\", \"ids\": [\"order_id\", \"fulfillment_id\", \"id\"], \"path\": \"orders/<order_id>/fulfillments/<fulfillment_id>/events/<id>.json\"},\n    {\"http_method\": \"get\", \"operation\": \"get\", \"ids\": [\"order_id\", \"fulfillment_id\"], \"path\": \"orders/<order_id>/fulfillments/<fulfillment_id>/events.json\"},\n    {\"http_method\": \"get\", \"operation\": \"get\", \"ids\": [\"order_id\", \"fulfillment_id\", \"id\"], \"path\": \"orders/<order_id>/fulfillments/<fulfillment_id>/events/<id>.json\"},\n    {\"http_method\": \"post\", \"operation\": \"post\", \"ids\": [\"order_id\", \"fulfillment_id\"], \"path\": \"orders/<order_id>/fulfillments/<fulfillment_id>/events.json\"}\n  ];\n  protected static resourceNames: ResourceNames[] = [\n    {\n      \"singular\": \"fulfillment_event\",\n      \"plural\": \"fulfillment_events\"\n    }\n  ];\n\n  protected static getJsonBodyName(): string\n  {\n    return \"event\";\n  }\n\n  public static async find(\n    {\n      session,\n      id,\n      order_id = null,\n      fulfillment_id = null,\n      event_id = null\n    }: FindArgs\n  ): Promise<FulfillmentEvent | null> {\n    const result = await this.baseFind<FulfillmentEvent>({\n      session: session,\n      urlIds: {\"id\": id, \"order_id\": order_id, \"fulfillment_id\": fulfillment_id},\n      params: {\"event_id\": event_id},\n    });\n    return result.data ? result.data[0] : null;\n  }\n\n  public static async delete(\n    {\n      session,\n      id,\n      order_id = null,\n      fulfillment_id = null\n    }: DeleteArgs\n  ): Promise<unknown> {\n    const response = await this.request<FulfillmentEvent>({\n      http_method: \"delete\",\n      operation: \"delete\",\n      session: session,\n      urlIds: {\"id\": id, \"order_id\": order_id, \"fulfillment_id\": fulfillment_id},\n      params: {},\n    });\n\n    return response ? response.body : null;\n  }\n\n  public static async all(\n    {\n      session,\n      order_id = null,\n      fulfillment_id = null,\n      ...otherArgs\n    }: AllArgs\n  ): Promise<FindAllResponse<FulfillmentEvent>> {\n    const response = await this.baseFind<FulfillmentEvent>({\n      session: session,\n      urlIds: {\"order_id\": order_id, \"fulfillment_id\": fulfillment_id},\n      params: {...otherArgs},\n    });\n\n    return response;\n  }\n\n  public address1: string | null;\n  public city: string | null;\n  public country: Country | null | {[key: string]: any};\n  public created_at: string | null;\n  public estimated_delivery_at: string | null;\n  public fulfillment_id: number | null;\n  public happened_at: string | null;\n  public id: number | null;\n  public latitude: number | null;\n  public longitude: number | null;\n  public message: string | null;\n  public order_id: number | null;\n  public province: Province | null | {[key: string]: any};\n  public shop_id: number | null;\n  public status: string | null;\n  public updated_at: string | null;\n  public zip: string | null;\n}\n"],"names":["Base","ApiVersion","Country","Province"],"mappings":"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"}