{"version":3,"file":"location.js","sources":["../../../../../../../rest/admin/2025-07/location.ts"],"sourcesContent":["/***********************************************************************************************************************\n* This file is auto-generated. If you have an issue, please create a GitHub issue.                                     *\n***********************************************************************************************************************/\n\nimport {Base, FindAllResponse} from '../../base';\nimport {ResourcePath, ResourceNames} from '../../types';\nimport {Session} from '../../../lib/session/session';\nimport {ApiVersion} from '../../../lib/types';\n\ninterface FindArgs {\n  session: Session;\n  id: number | string;\n}\ninterface AllArgs {\n  [key: string]: unknown;\n  session: Session;\n  limit?: unknown;\n}\ninterface CountArgs {\n  [key: string]: unknown;\n  session: Session;\n}\ninterface InventoryLevelsArgs {\n  [key: string]: unknown;\n  session: Session;\n  id: number | string;\n}\n\nexport class Location extends Base {\n  public static apiVersion = ApiVersion.July25;\n\n  protected static hasOne: {[key: string]: typeof Base} = {};\n  protected static hasMany: {[key: string]: typeof Base} = {};\n  protected static paths: ResourcePath[] = [\n    {\"http_method\": \"get\", \"operation\": \"count\", \"ids\": [], \"path\": \"locations/count.json\"},\n    {\"http_method\": \"get\", \"operation\": \"get\", \"ids\": [], \"path\": \"locations.json\"},\n    {\"http_method\": \"get\", \"operation\": \"get\", \"ids\": [\"id\"], \"path\": \"locations/<id>.json\"},\n    {\"http_method\": \"get\", \"operation\": \"inventory_levels\", \"ids\": [\"id\"], \"path\": \"locations/<id>/inventory_levels.json\"}\n  ];\n  protected static resourceNames: ResourceNames[] = [\n    {\n      \"singular\": \"location\",\n      \"plural\": \"locations\"\n    }\n  ];\n\n  public static async find(\n    {\n      session,\n      id\n    }: FindArgs\n  ): Promise<Location | null> {\n    const result = await this.baseFind<Location>({\n      session: session,\n      urlIds: {\"id\": id},\n      params: {},\n    });\n    return result.data ? result.data[0] : null;\n  }\n\n  public static async all(\n    {\n      session,\n      limit = null,\n      ...otherArgs\n    }: AllArgs\n  ): Promise<FindAllResponse<Location>> {\n    const response = await this.baseFind<Location>({\n      session: session,\n      urlIds: {},\n      params: {\"limit\": limit, ...otherArgs},\n    });\n\n    return response;\n  }\n\n  public static async count(\n    {\n      session,\n      ...otherArgs\n    }: CountArgs\n  ): Promise<unknown> {\n    const response = await this.request<Location>({\n      http_method: \"get\",\n      operation: \"count\",\n      session: session,\n      urlIds: {},\n      params: {...otherArgs},\n      body: {},\n      entity: null,\n    });\n\n    return response ? response.body : null;\n  }\n\n  public static async inventory_levels(\n    {\n      session,\n      id,\n      ...otherArgs\n    }: InventoryLevelsArgs\n  ): Promise<unknown> {\n    const response = await this.request<Location>({\n      http_method: \"get\",\n      operation: \"inventory_levels\",\n      session: session,\n      urlIds: {\"id\": id},\n      params: {...otherArgs},\n      body: {},\n      entity: null,\n    });\n\n    return response ? response.body : null;\n  }\n\n  public active: boolean | null;\n  public address1: string | null;\n  public address2: string | null;\n  public city: string | null;\n  public country: string | null;\n  public country_code: string | null;\n  public created_at: string | null;\n  public id: number | null;\n  public legacy: boolean | null;\n  public localized_country_name: string | null;\n  public localized_province_name: string | null;\n  public name: string | null;\n  public phone: string | null;\n  public province: string | null;\n  public province_code: string | null;\n  public updated_at: string | null;\n  public zip: string | null;\n}\n"],"names":["Base","ApiVersion"],"mappings":"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"}